---
apiVersion: v1
kind: Namespace
metadata:
  name: tang

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tangd1
  namespace: tang
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      name: tang
      name: tang1
  template:
    metadata:
      labels:
        name: tang
        name: tang1
    spec:
      containers:
      - image: quay.io/dbaker/test:tangd  ## xxx replace me
        imagePullPolicy: IfNotPresent
        name: tang
        ports:
        - containerPort: 8080
          name: tcp8080
          protocol: TCP
        volumeMounts:
        - mountPath: /var/db/tang
          name: data

      securityContext:
        runAsNonRoot: true

      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: tangdaemon-data1

---
apiVersion: v1
kind: Service
metadata:
  name: tangd-1
  namespace: tang
spec:
  ports:
  - name: tcp8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    name: tang1

---
apiVersion: v1
kind: Service
metadata:
  name: tangd-2
  namespace: tang
spec:
  ports:
  - name: tcp8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    name: tang2

---
apiVersion: v1
kind: Service
metadata:
  name: tangd-3
  namespace: tang
spec:
  ports:
  - name: tcp8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    name: tang3

---
apiVersion: v1
kind: Service
metadata:
  name: tangd-all
  namespace: tang
spec:
  ports:
  - name: tcp8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    name: tang

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tangdaemon-data1
  namespace: tang
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 128Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tangdaemon-data2
  namespace: tang
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 128Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tangdaemon-data2
  namespace: tang
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 128Mi

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: tang-80
  namespace: tang
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: Host(`tang.example.com`)    ## Replace me
    services:
    - kind: Service
      name: tangd-all
      port: 8080
  - kind: Rule
    match: Host(`tang1.example.com`)    ## Replace me
    services:
    - kind: Service
      name: tangd-1
      port: 8080
  - kind: Rule
    match: Host(`tang2.example.com`)    ## Replace me
    services:
    - kind: Service
      name: tangd-2
      port: 8080
  - kind: Rule
    match: Host(`tang3.example.com`)    ## Replace me
    services:
    - kind: Service
      name: tangd-3
      port: 8080


